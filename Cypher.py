import math
import numpy as np

alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
passage_1 = "EMUFPHZLRFAXYUSDJKZLDKRNSHGNFIVJYQTQUXQBQVYUVLLTREVJYQTMKYRDMFDVFPJUDEEHZWETZYVGWHKKQETGFQJNCEGGWHKKDQMCPFQZDQMMIAGPFXHQRLGTIMVMZJANQLVKQEDAGDVFRPJUNGEUNAQZGZLECGYUXUEENJTBJLBQCRTBJDFHRRYIZETKZEMVDUFKSJHKFWHKUWQLSZFTIHHDDDUVHDWKBFUFPWNTDFIYCUQZEREEVLDKFEZMOQQJLTTUGSYQPFEUNLAVIDXFLGGTEZFKZBSFDQVGOGIPUFXHHDRKFFHQNTGPUAECNUVPDJMQCLQUMUNEDFQELZZVRRGKFFVOEEXBDMVPNFQXEZLGREDNQFMPNZGLFLPMRJQYALMGNUVPDXVKPDQUMEBEDMHDAFMJGZNUPLGEWJLLAETG"
passage_2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDAKRYPTOSABCDEFGHIJLMNQUVWXZKRYPBRYPTOSABCDEFGHIJLMNQUVWXZKRYPTCYPTOSABCDEFGHIJLMNQUVWXZKRYPTODPTOSABCDEFGHIJLMNQUVWXZKRYPTOSETOSABCDEFGHIJLMNQUVWXZKRYPTOSAFOSABCDEFGHIJLMNQUVWXZKRYPTOSABGSABCDEFGHIJLMNQUVWXZKRYPTOSABCHABCDEFGHIJLMNQUVWXZKRYPTOSABCDIBCDEFGHIJLMNQUVWXZKRYPTOSABCDEJCDEFGHIJLMNQUVWXZKRYPTOSABCDEFKDEFGHIJLMNQUVWXZKRYPTOSABCDEFGLEFGHIJLMNQUVWXZKRYPTOSABCDEFGHMFGHIJLMNQUVWXZKRYPTOSABCDEFGHI"
passage_3 = "ENDYAHROHNLSRHEOCPTEOIBIDYSHNAIACHTNREYULDSLLSLLNOHSNOSMRWXMNETPRNGATIHNRARPESLNNELEBLPIIACAEWMTWNDITEENRAHCTENEUDRETNHAEOETFOLSEDTIWENHAEIOYTEYQHEENCTAYCREIFTBRSPAMHHEWENATAMATEGYEERLBTEEFOASFIOTUETUAEOTOARMAEERTNRTIBSEDDNIAAHTTMSTEWPIEROAGRIEWFEBAECTDDHILCEIHSITEGOEAOSDDRYDLORITRKLMLEHAGTDHARDPNEOHMGFMFEUHEECDMRIPFEIMEHNLSSTTRTVDOHWOBKRUOXOGHULBSOLIFBBWFLRVQQPRNGKSSOTWTQSJQSSEKZZWATJKLUDIAWINFBNYPVTTMZFPKWGDKZXTJCDIGKUHUAUEKCAR"
encrypted = "NGHIJLMNQUVWXZKRYPTOSABCDEFGHIJLOHIJLMNQUVWXZKRYPTOSABCDEFGHIJLPIJLMNQUVWXZKRYPTOSABCDEFGHIJLMQJLMNQUVWXZKRYPTOSABCDEFGHIJLMNRLMNQUVWXZKRYPTOSABCDEFGHIJLMNQSMNQUVWXZKRYPTOSABCDEFGHIJLMNQUTNQUVWXZKRYPTOSABCDEFGHIJLMNQUVUQUVWXZKRYPTOSABCDEFGHIJLMNQUVWVUVWXZKRYPTOSABCDEFGHIJLMNQUVWXWVWXZKRYPTOSABCDEFGHIJLMNQUVWXZWXZKRYPTOSABCDEFGHIJLMNQUVWXZKYXZKRYPTOSABCDEFGHIJLMNQUVWXZKRZZKRYPTOSABCDEFGHIJLMNQUVWXZKRYABCDEFGHIJKLMNOPQRSTUVWXYZABCD"

def make_vectors(text):
    l = []
    for i in text:
        l.append(alphabet.index(i))
    return l

def make_key(key_1,key_2,key_3):
    mat = np.array()
    for i in key_1:
        mat[i,0] = key_1[i]

    for i in key_2:
        mat[i,1] = key_2[i]

    for i in key_2:
        mat[i,2] = key_3[i]
    
    return mat

vect_1 = make_vectors(passage_1).append(0)
vect_2 = make_vectors(passage_2)
vect_3 = make_vectors(passage_3)
vect_crypted = make_vectors(encrypted)

key = make_key(vect_1,vect_2,vect_3)

mat_encrypt = np.matrix()

for i in vect_crypted:
    mat_encrypt[i,0] = vect_crypted[i]

prod = np.dot(key, mat_encrypt)

decyph = []

for i in prod:
    decyph.append(alphabet[math.floor(i/26)])

decyph = "".join(decyph)

print(decyph)